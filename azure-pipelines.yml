jobs:
- job:
  pool:
    vmImage: 'ubuntu-latest'
  displayName: Build

  steps:

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: Build

  - task: Gradle@2
    inputs:
      workingDirectory: '$(Build.SourcesDirectory)'
      gradleWrapperFile: 'gradlew'
      tasks: 'test'
      publishJUnitResults: true
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      testResultsFiles: '**/build/test-results/test/*.xml'
    displayName: 'Run Unit Tests'

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      testRunTitle: 'Coverage'
      codeCoverageToolOption: 'Cobertura'
      codeCoverageClassFilesDirectories: 'build/classes/main/'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: 'Cobertura'

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'Sonarcloud'
      organization: 'luchenstein'
      projectKey: 'luchenstein_microservicio-spring'
      projectName: 'microservicio-spring'    
    displayName: 'SonarCloud Prepare'

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'sonarqube'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.5.0.2730'
      spotBugsAnalysis: false
    displayName: 'Gradle Running Test'
    continueOnError: false

